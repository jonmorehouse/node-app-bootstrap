// Generated by CoffeeScript 1.6.3
(function() {
  var App, async, events,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  async = require('async');

  events = require('events');

  App = (function(_super) {
    __extends(App, _super);

    App.components = {
      rabbit: require("./rabbit"),
      postgresql: require("./postgresql"),
      paperTrail: require("./paper_trail"),
      airBrake: require("./air_brake")
    };

    function App(cb) {
      var component, functions, key;
      functions = (function() {
        var _ref, _results;
        _ref = App.components;
        _results = [];
        for (key in _ref) {
          component = _ref[key];
          _results.push(component["function"]);
        }
        return _results;
      })();
      p(functions);
      App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.triggerClose = function(msg) {
      return this.emit("close", msg);
    };

    App.prototype.close = function(cb) {};

    return App;

  })(events.EventEmitter);

  module.exports = App;

}).call(this);
