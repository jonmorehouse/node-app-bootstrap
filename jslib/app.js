// Generated by CoffeeScript 1.6.3
(function() {
  var App, async, events,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  async = require('async');

  events = require('events');

  App = (function(_super) {
    __extends(App, _super);

    App.components = {
      rabbit: require("./rabbit"),
      postgresql: require("./postgresql"),
      paperTrail: require("./paper_trail"),
      airBrake: require("./air_brake")
    };

    function App(cb) {
      App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.triggerClose = function(msg) {
      return this.emit("close", msg);
    };

    App.prototype.close = function(cb) {};

    return App;

  })(events.EventEmitter);

  /*
  class App extends bootstrap.App
  
    @components["rabbit"] = require "./my_custom_rabbit_wrapper"
  
    constructor: (cb)->
  
      # bootstrap app
      super
      # bootstrap app
      cb?()
  
    close: (cb)->
  
      # close down your own app
      super
  
  # now startup application
  new App opts, (err, app)->
  
    #app is now ready!
    app.doThings
  
    app.on "close", (msg)->
  
      # shutdown app
      # trigger close
  
    app.error msg, FATAL=false
  
    app.logger app.logger.SEVERE, msg
  */


}).call(this);
