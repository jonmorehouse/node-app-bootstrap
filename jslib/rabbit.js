// Generated by CoffeeScript 1.6.3
(function() {
  var amqp, async, config, connection, exchange, extend, queue;

  config = require('node-config');

  amqp = require('amqp');

  extend = require('extend');

  async = require('async');

  /*
  Assumptions
    1 rabbit connection
    1+ queue
    1+ exchange
  
  Example
    rabbit
      host:
      port:
      queues: [
        name:
        exchange: 
        opts:
      ]
      exchanges: [
        name:
        opts:
      ]
  */


  connection = {
    setUp: function(app, cb) {
      return typeof cb === "function" ? cb() : void 0;
    },
    tearDown: function(app, cb) {}
  };

  exchange = {
    setUp: function(app, obj, cb) {
      return typeof cb === "function" ? cb() : void 0;
    },
    tearDown: function(queue, cb) {}
  };

  queue = function(app) {
    return {
      setUp: function(app, cb) {
        return typeof cb === "function" ? cb() : void 0;
      },
      tearDown: function(app, cb) {}
    };
  };

  exports.setUp = function(app, cb) {
    if (app.rabbit == null) {
      return typeof cb === "function" ? cb(null, app) : void 0;
    }
    return async.waterfall([conn.setUp, exchange.setUp, queue.setUp], function(cb) {
      return typeof cb === "function" ? cb() : void 0;
    });
  };

  exports.tearDown = function(app, cb) {
    return typeof cb === "function" ? cb() : void 0;
  };

}).call(this);
