// Generated by CoffeeScript 1.6.3
(function() {
  var App, async, events;

  async = require('async');

  events = require('events');

  App = (function() {
    App.components = {
      rabbit: require("./rabbit")
    };

    function App(cb) {
      this._caller("setUp", cb);
    }

    App.prototype.close = function(cb) {
      return this.caller("tearDown", cb);
    };

    App.prototype.triggerClose = function(msg) {
      return this.emit("close", msg);
    };

    App.prototype._caller = function(method, cb) {
      var component, functions, key,
        _this = this;
      p("HERE");
      functions = (function() {
        var _ref, _results;
        _ref = App.components;
        _results = [];
        for (key in _ref) {
          component = _ref[key];
          _results.push(component[method]);
        }
        return _results;
      })();
      return async.each(functions, (function(method, cb) {
        return method(_this, cb);
      }), function(err) {
        if (err) {
          return cb(err);
        }
        return typeof cb === "function" ? cb() : void 0;
      });
    };

    return App;

  })();

  module.exports = App;

}).call(this);
