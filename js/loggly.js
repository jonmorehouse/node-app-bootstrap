// Generated by CoffeeScript 1.6.3
(function() {
  var c, loggly, shared,
    _this = this,
    __slice = [].slice;

  loggly = require('loggly');

  c = require('multi-config');

  shared = require("./shared");

  exports.setUp = function(app, cb) {
    var cObj, client, lObj, missing;
    if (c.loggly == null) {
      return typeof cb === "function" ? cb() : void 0;
    }
    missing = shared.missingParameters(["token", "subdomain", "username", "password", "tags"], c.loggly);
    if (missing) {
      return cb(new Error(missing));
    }
    cObj = c.loggly;
    lObj = {
      token: cObj.token,
      subdomain: cObj.subdomain,
      auth: {
        username: cObj.username,
        password: cObj.password
      },
      tags: cObj.tags != null ? cObj.tags : [],
      json: cObj.json != null ? cObj.json : true
    };
    client = loggly.createClient(lObj);
    app.loggly = client;
    app.log = function() {
      var args, msg, _ref;
      msg = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      return (_ref = this.loggly).log.apply(_ref, [msg].concat(__slice.call(args)));
    };
    return typeof cb === "function" ? cb() : void 0;
  };

  exports.tearDown = function(app, cb) {
    if (app.loggly != null) {
      delete app.loggly;
    }
    if (app.log != null) {
      delete app.log;
    }
    return typeof cb === "function" ? cb() : void 0;
  };

}).call(this);
